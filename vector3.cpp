#include<vector>
#include<iostream>
#include<algorithm>
#include<list>
#include<numeric>

using namespace std;



int main() {
	setlocale(LC_ALL, "RUS");
	cout << "Введите n :\n"; int n; cin >> n; // ввожу количество элементов в векторе
	vector<int>a; vector<int>b; // создаю векторы для последовательностей
	cout << "Введите элементы первой последовательности \n";
	for (int i = 0; i < n; i++) { // ввод элементов для первой посл-ти
		int x; cin >> x;
		a.push_back(x);
	}
	cout << "Введите число Х \n";
	int x; cin >> x;
	for (int i = 0; i < a.size(); i++) {    // прохожусь по вектору и ищу элементы кратные Х
		int k = 0; // создаю к и s что бы при не выполнении условия, элменты не удалялись
		int s = 0;
		if (a[i] % x == 0) {
			k = i;
			s = k + 1;
			i--;// вычитаю i что бы при удалении рассматривался нужный элемент
		}
		a.erase(a.begin() + k, a.begin() + s);// операция удаления
	}
	int m = a.size();
	cout << "итоговая первая последовательность\n"; // вывод получившейся первой посл-ти
	for (int i = 0; i < m; i++) {
		cout << a[i] << " ";
	}
	cout << endl;
	cout << "Введите эллементы второй последовательности \n"; // ввод элементов для второй последовательности
	for (int i = 0; i < n; i++) {
		int x; cin >> x;
		b.push_back(x);
	}
	cout << "Введите числа а и b \n"; int a1, b1; cin >> a1; cin >> b1; // ввод диапазонна чисел
	if (a1 > b1) { // в случае если первое число больше второго, замена
		swap(a1, b1);
	}
	cout << "Введите число Y "; cout << endl; int Y; cin >> Y;
	for (int i = 0; i < n; i++) { // присваивание элементам удовлетворяющим условию введеёного ранее элментам
		if (b[i] >= a1 && b[i] <= b1) {
			b[i] = Y;
		}
	}
	cout << "итоговая вторая последовательность\n";// вывод второй последовательности
	for (int i = 0; i < n; i++) {
		cout << b[i] << " ";
	}
	cout << endl;
	list<int>a11; list<int>b11; //создаю списки
	for (int i = 0; i < m; i++) { // заношу в список первую последовательность
		a11.push_back(a[i]);
	}
	for (int i = 0; i < n; i++) { // заношу в список вторую последовательность
		b11.push_back(b[i]);
	}
	a11.sort(); b11.sort(); // сортирую последовательности
	cout << endl;
	b11.merge(a11); // совмещаю последовательности
	for (list<int>::iterator it = b11.begin(); it != b11.end(); it++) // вывожу итоговый ответ
		cout << *it << " ";
}
